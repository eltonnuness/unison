/*
 * DownloadNewsPanel.java
 *
 * Created on 27 November 2007, 08:58
 */

package uk.co.sleonard.unison.gui.generated;

import java.text.ParseException;
import java.util.Date;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Observable;
import java.util.Observer;
import java.util.Set;

import javax.swing.DefaultListModel;
import javax.swing.ListModel;

import uk.co.sleonard.unison.datahandling.DAO.DownloadRequest.DownloadMode;
import uk.co.sleonard.unison.gui.UNISoNController;
import uk.co.sleonard.unison.gui.UNISoNException;
import uk.co.sleonard.unison.gui.UNISoNLogger;
import uk.co.sleonard.unison.input.HeaderDownloadWorker;
import uk.co.sleonard.unison.input.NNTPNewsGroup;
import uk.co.sleonard.unison.utils.HttpDateObject;

/**
 * 
 * @author Steve
 */
public class DownloadNewsPanel extends javax.swing.JPanel implements
		UNISoNLogger, Observer {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6581138636992116397L;
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JList availableNewsgroups;
	private javax.swing.JButton cancelButton;
	private javax.swing.JButton downloadButton;
	private javax.swing.JProgressBar downloadProgressBar;
	private javax.swing.JLabel downloadProgressLabel;
	private javax.swing.JButton findButton;
	private javax.swing.JCheckBox includeMessageBodyCheck;
	private javax.swing.JTextField fromDateField;
	private javax.swing.JLabel fromDateLabel;
	private javax.swing.JLabel toDateLabel;
	private javax.swing.JScrollPane jScrollPane;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JTextField newsgroupField;
	private javax.swing.JLabel newsgroupLabel;
	private javax.swing.JTextArea notesArea;
	private javax.swing.JButton pauseButton;
	private javax.swing.JCheckBox includeExtraFieldsCheck;
	private javax.swing.JTextField toDateField;

	// End of variables declaration//GEN-END:variables
	/** Creates new form DownloadNewsPanel */
	public DownloadNewsPanel() {
		controller = UNISoNController.getInstance();

		this.initComponents();

		controller.getHeaderDownloader().addObserver(this);
		this.downloadButton.setEnabled(false);
		this.cancelButton.setEnabled(false);
		this.pauseButton.setEnabled(false);
		
		//FIXME - disable these until they work
		includeExtraFieldsCheck.setVisible(false);
		includeMessageBodyCheck.setVisible(false);
		downloadProgressBar.setVisible(false);
		downloadProgressLabel.setVisible(false);
	}

	private Set<NNTPNewsGroup> availableGroups;

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code
	// ">//GEN-BEGIN:initComponents
	private void initComponents() {
		availableNewsgroups = new javax.swing.JList();
		newsgroupLabel = new javax.swing.JLabel();
		newsgroupField = new javax.swing.JTextField();
		downloadProgressBar = new javax.swing.JProgressBar();
		downloadProgressLabel = new javax.swing.JLabel();
		findButton = new javax.swing.JButton();
		fromDateLabel = new javax.swing.JLabel();
		toDateLabel = new javax.swing.JLabel();
		toDateField = new javax.swing.JTextField();
		includeMessageBodyCheck = new javax.swing.JCheckBox();
		fromDateField = new javax.swing.JTextField();
		includeExtraFieldsCheck = new javax.swing.JCheckBox();
		downloadButton = new javax.swing.JButton();
		pauseButton = new javax.swing.JButton();
		cancelButton = new javax.swing.JButton();
		jScrollPane = new javax.swing.JScrollPane();
		jScrollPane3 = new javax.swing.JScrollPane();
		notesArea = new javax.swing.JTextArea();

		availableNewsgroups.setModel(getAvailableGroupsModel());
		availableNewsgroups
				.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
					public void valueChanged(
							javax.swing.event.ListSelectionEvent evt) {
						availableNewsgroupsValueChanged(evt);
					}
				});

		newsgroupLabel.setText("Newsgroup ");
		newsgroupLabel
				.setToolTipText("Type in full or part name (use * for wild character, e.g. *senior* for all groups with \"senior\" in the name)");

		newsgroupField
				.setToolTipText("Type in full or part name (use * for wild character, e.g. *senior* for all groups with \"senior\" in the name)");

		downloadProgressLabel.setText("Download Status");

		findButton.setText("Find groups");
		findButton
				.setToolTipText("Enter name or part name (* for wild chararcter) the n click here");
		findButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				findButtonActionPerformed(evt);
			}
		});

		fromDateLabel.setText("Date from");

		toDateLabel.setText("Date To");

		includeMessageBodyCheck.setText("Download Body");
		includeMessageBodyCheck
				.setToolTipText("Downloads the message body, i.e. the actual post");
		includeMessageBodyCheck.setBorder(javax.swing.BorderFactory
				.createEmptyBorder(0, 0, 0, 0));
		includeMessageBodyCheck.setMargin(new java.awt.Insets(0, 0, 0, 0));
		includeMessageBodyCheck
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						fromDateCheckActionPerformed(evt);
					}
				});

		includeExtraFieldsCheck.setText("All fields");
		includeExtraFieldsCheck
				.setToolTipText("Download Location and Crossposts");
		includeExtraFieldsCheck.setBorder(javax.swing.BorderFactory
				.createEmptyBorder(0, 0, 0, 0));
		includeExtraFieldsCheck.setMargin(new java.awt.Insets(0, 0, 0, 0));
		includeExtraFieldsCheck
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						toDateCheckActionPerformed(evt);
					}
				});

		downloadButton.setText("Download");
		downloadButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				downloadButtonActionPerformed(evt);
			}
		});

		pauseButton.setText("Pause");
		pauseButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				pauseButtonActionPerformed(evt);
			}
		});

		cancelButton.setText("Cancel");
		cancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelButtonActionPerformed(evt);
			}
		});

		notesArea.setColumns(20);
		notesArea.setRows(5);
		jScrollPane3.setViewportView(notesArea);
		jScrollPane.setViewportView(availableNewsgroups);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								layout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																layout
																		.createSequentialGroup()
																		.addComponent(
																				newsgroupLabel)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				newsgroupField,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				128,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED))
														.addComponent(
																jScrollPane,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																189,
																Short.MAX_VALUE)
														.addComponent(
																downloadProgressBar,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																162,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(
																downloadProgressLabel))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																layout
																		.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING,
																				false)
																		.addGroup(
																				layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(
																								findButton)
																						.addComponent(
																								cancelButton)
																						.addComponent(
																								downloadButton)
																						.addComponent(
																								pauseButton)
																						.addComponent(
																								fromDateLabel)
																						.addComponent(
																								fromDateField,
																								javax.swing.GroupLayout.Alignment.LEADING,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addComponent(
																								toDateLabel)
																						.addComponent(
																								toDateLabel)
																						.addComponent(
																								includeMessageBodyCheck)))

														.addComponent(
																downloadButton)
														.addComponent(
																includeExtraFieldsCheck)
														.addComponent(
																toDateField,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jScrollPane3,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												151, Short.MAX_VALUE)
										.addContainerGap()));

		layout.linkSize(javax.swing.SwingConstants.HORIZONTAL,
				new java.awt.Component[] { cancelButton, downloadButton,
						findButton, fromDateField, pauseButton, toDateField });

		layout
				.setVerticalGroup(layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								layout
										.createSequentialGroup()
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																layout
																		.createSequentialGroup()
																		.addContainerGap()
																		.addComponent(
																				jScrollPane3,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				259,
																				Short.MAX_VALUE))
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																layout
																		.createSequentialGroup()
																		.addComponent(
																				includeExtraFieldsCheck)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				includeMessageBodyCheck)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				downloadButton)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				pauseButton)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				cancelButton))
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																layout
																		.createSequentialGroup()
																		.addContainerGap()
																		.addGroup(
																				layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.BASELINE)
																						.addComponent(
																								findButton)
																						.addComponent(
																								newsgroupField,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addComponent(
																								newsgroupLabel))
																		.addGroup(
																				layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addGroup(
																								layout
																										.createSequentialGroup()
																										.addGap(
																												47,
																												47,
																												47)
																										.addGroup(
																												layout
																														.createParallelGroup(
																																javax.swing.GroupLayout.Alignment.BASELINE)
																														.addComponent(
																																fromDateLabel))
																										.addPreferredGap(
																												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																										.addComponent(
																												fromDateField,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												javax.swing.GroupLayout.DEFAULT_SIZE,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addPreferredGap(
																												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																										.addGroup(
																												layout
																														.createParallelGroup(
																																javax.swing.GroupLayout.Alignment.BASELINE)
																														.addComponent(
																																toDateLabel)
																														.addComponent(
																																includeExtraFieldsCheck))
																										.addPreferredGap(
																												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																										.addComponent(
																												toDateField,
																												javax.swing.GroupLayout.PREFERRED_SIZE,
																												javax.swing.GroupLayout.DEFAULT_SIZE,
																												javax.swing.GroupLayout.PREFERRED_SIZE)
																										.addGap(
																												10,
																												10,
																												10))
																						.addGroup(
																								layout
																										.createSequentialGroup()
																										.addPreferredGap(
																												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																										.addComponent(
																												jScrollPane,
																												javax.swing.GroupLayout.DEFAULT_SIZE,
																												181,
																												Short.MAX_VALUE)
																										.addPreferredGap(
																												javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
																		.addGap(
																				10,
																				10,
																				10)
																		.addComponent(
																				downloadProgressLabel)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				downloadProgressBar,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE)))
										.addContainerGap()));
	}// </editor-fold>//GEN-END:initComponents

	private void toDateCheckActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_toDateCheckActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_toDateCheckActionPerformed

	private void fromDateCheckActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_fromDateCheckActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_fromDateCheckActionPerformed

	private void availableNewsgroupsValueChanged(
			javax.swing.event.ListSelectionEvent evt) {// GEN-FIRST:event_availableNewsgroupsValueChanged

	}// GEN-LAST:event_availableNewsgroupsValueChanged

	private ListModel getAvailableGroupsModel() {
		final DefaultListModel model = new DefaultListModel();

		if (null != availableGroups) {
			for (final Iterator<NNTPNewsGroup> iter = availableGroups
					.iterator(); iter.hasNext();) {
				final NNTPNewsGroup next = iter.next();
				model.addElement(next);
			}
		}
		return model;
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(final String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				UNISoNTabbedFrame frame = new UNISoNTabbedFrame();
				frame.setVisible(true);
				DownloadNewsPanel panel = new DownloadNewsPanel();
				frame.add(panel);
				panel.setVisible(true);
			}
		});
	}

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelButtonActionPerformed
		controller.getHeaderDownloader().fullstop();
	}// GEN-LAST:event_cancelButtonActionPerformed

	private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_pauseButtonActionPerformed
		HeaderDownloadWorker headerDownloader = controller
				.getHeaderDownloader();
		if (headerDownloader.isDownloading()) {
			headerDownloader.pause();
			this.pauseButton.setText("Resume");
		} else {
			this.pauseButton.setText("Pause");
			headerDownloader.resume();
		}
	}// GEN-LAST:event_pauseButtonActionPerformed

	HttpDateObject parser = HttpDateObject.getParser();
	private UNISoNController controller;

	private void downloadButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_downloadButtonActionPerformed
		this.downloadButton.setEnabled(false);
		this.cancelButton.setEnabled(true);
		this.pauseButton.setEnabled(true);

		Object[] items = availableNewsgroups.getSelectedValues();
		Set<NNTPNewsGroup> groups = new HashSet<NNTPNewsGroup>();
		for (Object item : items) {
			groups.add((NNTPNewsGroup) item);
		}
		if (groups.size() > 0) {
			try {
				log("Download : " + groups);
				Date fromDate = parser.parseDate(fromDateField.getText());
				Date toDate = parser.parseDate(toDateField.getText());

				DownloadMode mode;
				if (includeMessageBodyCheck.isSelected()) {
					mode = DownloadMode.ALL;
				} else if (includeExtraFieldsCheck.isSelected()) {
					mode = DownloadMode.HEADERS;
				} else {
					mode = DownloadMode.BASIC;
				}
				controller.quickDownload(groups, fromDate, toDate, this, mode);

				log("Done.");
			} catch (UNISoNException e) {
				alert("Failed to download. Check your internet connection");
			} catch (ParseException e) {
				alert("Failed to parse date : " + e.getMessage());
			}
		}
	}// GEN-LAST:event_downloadButtonActionPerformed

	public void log(String message) {
		notesArea.append(message + "\n");
	}

	public void alert(String message) {
		log(message);
		UNISoNController.getInstance().showAlert(message);
	}

	private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_findButtonActionPerformed
		String group = newsgroupField.getText();
		log("Find groups matching : " + group);
		downloadButton.setEnabled(false);
		// TODO this is good : alt.support.mult-sclerosis
		if (null != group) {
			try {
				availableGroups = UNISoNController.getInstance()
						.listNewsgroups(group);
			} catch (UNISoNException e) {
				alert("Problem downloading: " + e.getMessage());
			}
			if (availableGroups.size() == 0) {
				alert("No groups found for string : " + group);

			} else {
				downloadButton.setEnabled(true);
			}
			this.availableNewsgroups.setModel(this.getAvailableGroupsModel());
		}

	}// GEN-LAST:event_findButtonActionPerformed

	@Override
	public void update(Observable observable, Object arg1) {
		if (observable instanceof HeaderDownloadWorker) {
			HeaderDownloadWorker headerDownloader = (HeaderDownloadWorker) observable;
			if (!headerDownloader.isDownloading()) {
				this.downloadButton.setEnabled(true);
				this.cancelButton.setEnabled(false);
				this.pauseButton.setEnabled(false);
			}
		} else if (observable instanceof UNISoNController) {
			UNISoNController controller = (UNISoNController) observable;
		}
	}
}
