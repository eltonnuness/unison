/*
 * UNISoNTabbedFrame.java
 *
 * Created on 28 November 2007, 08:59
 */

package uk.co.sleonard.unison.gui.generated;

import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.util.Observable;
import java.util.Observer;

import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

import org.hsqldb.util.DatabaseManagerSwing;

import uk.co.sleonard.unison.gui.JSplashScreen;
import uk.co.sleonard.unison.gui.UNISoNController;

/**
 * 
 * @author Steve
 */
public class UNISoNTabbedFrame extends javax.swing.JFrame implements Observer {

	/**
	 * 
	 */
	private static final long serialVersionUID = -273253787613490358L;

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(final String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new UNISoNTabbedFrame().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JMenuItem aboutMenuItem;
	private javax.swing.JMenuItem deleteDBMenuItem;
	private uk.co.sleonard.unison.gui.generated.DownloadNewsPanel downloadNewsPanel1;
	private javax.swing.JMenuItem exitMenuItem;
	private javax.swing.JMenu fileMenu;
	private javax.swing.JMenu helpMenu;
	private javax.swing.JMenuBar jMenuBar1;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JSeparator jSeparator2;
	private uk.co.sleonard.unison.gui.generated.MessageStoreViewer messageStoreViewer1;
	private uk.co.sleonard.unison.gui.generated.PajekPanel pajekPanel1;
	private javax.swing.JMenuItem refreshDBMenuItem;
	private javax.swing.JMenuItem showDBclientMenuItem;
	private javax.swing.JTabbedPane tabbedPane;
	private UNISoNController controller;
	private AboutDialog aboutDialog;

	// End of variables declaration//GEN-END:variables
	/** Creates new form UNISoNTabbedFrame */
	public UNISoNTabbedFrame() {
		this.setTitle("UNISoN");
		final JSplashScreen splash = new JSplashScreen("Loading ...", this);
		splash.setProgress(10);

		controller = UNISoNController.create(this);

		splash.setProgress(50);
		this.initComponents();
		splash.setProgress(80);

		controller.addObserver(this.downloadNewsPanel1);
		controller.addObserver(this.messageStoreViewer1);
		controller.addObserver(this.pajekPanel1);
		controller.addObserver(this);

		aboutDialog = new AboutDialog(this, false);

		exitMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_Q,
				InputEvent.CTRL_MASK));

		refreshDBMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_R,
				InputEvent.CTRL_MASK));

		deleteDBMenuItem.setAccelerator(KeyStroke.getKeyStroke(
				KeyEvent.VK_DELETE, InputEvent.CTRL_MASK));

		showDBclientMenuItem.setAccelerator(KeyStroke.getKeyStroke(
				KeyEvent.VK_SPACE, InputEvent.CTRL_MASK));

		aboutMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_HOME,
				InputEvent.CTRL_MASK));

		controller.refreshDataFromDatabase();
		splash.setProgress(100);

		splash.close();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code
	// ">//GEN-BEGIN:initComponents
	private void initComponents() {
		tabbedPane = new javax.swing.JTabbedPane();
		downloadNewsPanel1 = new uk.co.sleonard.unison.gui.generated.DownloadNewsPanel();
		messageStoreViewer1 = new uk.co.sleonard.unison.gui.generated.MessageStoreViewer();
		pajekPanel1 = new uk.co.sleonard.unison.gui.generated.PajekPanel(this);
		jMenuBar1 = new javax.swing.JMenuBar();
		fileMenu = new javax.swing.JMenu();
		refreshDBMenuItem = new javax.swing.JMenuItem();
		showDBclientMenuItem = new javax.swing.JMenuItem();
		jSeparator1 = new javax.swing.JSeparator();
		exitMenuItem = new javax.swing.JMenuItem();
		helpMenu = new javax.swing.JMenu();
		deleteDBMenuItem = new javax.swing.JMenuItem();
		jSeparator2 = new javax.swing.JSeparator();
		aboutMenuItem = new javax.swing.JMenuItem();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		tabbedPane.setName("");
		tabbedPane.addTab("Download Messages", downloadNewsPanel1);

		tabbedPane.addTab("View Saved Data", messageStoreViewer1);

		tabbedPane.addTab("Transform Data For Pajek", pajekPanel1);

		fileMenu.setText("File");
		refreshDBMenuItem.setText("Refresh Data");
		refreshDBMenuItem
				.setToolTipText("Loads the latest data from the database");
		refreshDBMenuItem
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						refreshDBMenuItemActionPerformed(evt);
					}
				});

		fileMenu.add(refreshDBMenuItem);

		showDBclientMenuItem.setText("DB GUI");
		showDBclientMenuItem
				.setToolTipText("Brings up a DB client to view the data directly");
		showDBclientMenuItem
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						showDBclientMenuItemActionPerformed(evt);
					}
				});

		fileMenu.add(showDBclientMenuItem);

		fileMenu.add(jSeparator1);

		exitMenuItem.setText("Exit");
		exitMenuItem.setToolTipText("Exits the application");
		exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				exitMenuItemActionPerformed(evt);
			}
		});

		fileMenu.add(exitMenuItem);

		jMenuBar1.add(fileMenu);

		helpMenu.setText("Help");
		deleteDBMenuItem.setText("Delete All Data");
		deleteDBMenuItem
				.setToolTipText("This clears all the downloaded data - warning you will need to download everything again");
		deleteDBMenuItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				deleteDBMenuItemActionPerformed(evt);
			}
		});

		helpMenu.add(deleteDBMenuItem);

		helpMenu.add(jSeparator2);

		aboutMenuItem.setText("About UNISoN");
		aboutMenuItem.setToolTipText("A little bit about this application.");
		aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				aboutMenuItemActionPerformed(evt);
			}
		});

		helpMenu.add(aboutMenuItem);

		jMenuBar1.add(helpMenu);

		setJMenuBar(jMenuBar1);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 566,
				Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addContainerGap().addComponent(
						tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 373,
						Short.MAX_VALUE)));
		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_exitMenuItemActionPerformed
		final int response = JOptionPane.showConfirmDialog(this,
				"Are you sure?", "Exit Application", JOptionPane.YES_NO_OPTION);
		if (response == JOptionPane.YES_OPTION) {
			System.exit(0);
		}
	}// GEN-LAST:event_exitMenuItemActionPerformed

	private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_aboutMenuItemActionPerformed
		aboutDialog.setVisible(true);
	}// GEN-LAST:event_aboutMenuItemActionPerformed

	private void showDBclientMenuItemActionPerformed(
			java.awt.event.ActionEvent evt) {// GEN-FIRST:event_showDBclientMenuItemActionPerformed
		DatabaseManagerSwing.main(GUI_ARGS);
	}// GEN-LAST:event_showDBclientMenuItemActionPerformed

	private final static String dbDriver = "org.hsqldb.jdbcDriver";

	private final static String dbUser = "sa";
	private final static String DB_URL = "jdbc:hsqldb:file:DB/projectDB";

	// http://www.electric-spoon.com/cgi-bin/man/man2html?hsqldb-databasemanagerswing+1
	public static final String GUI_ARGS[] = { "-driver", dbDriver, "-url",
			DB_URL, "-user", dbUser, "-noexit" };

	private void refreshDBMenuItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_refreshDBMenuItemActionPerformed
		UNISoNController.getInstance().refreshDataFromDatabase();
	}// GEN-LAST:event_refreshDBMenuItemActionPerformed

	public void showAlert(final String message) {
		JOptionPane.showMessageDialog(this, message);
	}

	private void deleteDBMenuItemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deleteDBMenuItemActionPerformed
		final int response = JOptionPane.showConfirmDialog(this,
				"This will delete ALL the data. Are you sure?", "DB Refresh",
				JOptionPane.YES_NO_OPTION);
		switch (response) {
		case JOptionPane.YES_OPTION:
			UNISoNController.getInstance().helper().generateSchema();
			this.showAlert("DB refresh complete");
			UNISoNController.getInstance().refreshDataFromDatabase();
			break;
		default:
			this.showAlert("DB refresh cancelled");
		}
	}// GEN-LAST:event_deleteDBMenuItemActionPerformed

	@Override
	public void update(Observable observable, Object arg1) {
		if (observable instanceof UNISoNController) {
			showAlert("GUI has been refreshed from the database");
		}
	}

}
